name: CICD-Taskmaager

on:
    push:
        branches: [main, devops]
    pull_request:
        branches: [main]
jobs:
    test:
        name: RUN TEST
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Setup Nodejs
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: npm

            - name: Install Dependencies
              run: npm ci

            - name: Run Test
              run: npm run test

            - name: Upload Coverage Report
              uses: actions/upload-artifact@v4
              if: always()
              with:
                  name: coverage-report
                  path: coverage/
    build:
        name: Build Docker Image
        needs: [test]
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Cod
              uses: actions/checkout@v4

            - name: Setup Docker Buildx
              uses: docker/setup-buildx-action@v2
            - name: Build Docker Image
              run: |
                  docker build -t task-manager:${{github.sha}} .
                  docker tag task-manager:${{ github.sha }} task-manager:latest

            - name: Test Docker Image
              run: |
                  docker run -d -p 3000:3000 --name test-container task-manager:latest
                  sleep 5
                  curl -f http://localhost:3000/api/health || exit 1
                  docker stop test-container
                  docker rm test-container

            - name: Save Docker Image
              run: docker save task-manager:latest | gzip > task-manager.tar.gz

            - name: Upload Docker Image Artifact
              uses: actions/upload-artifact@v4
              with:
                  name: docker-image
                  path: task-manager.tar.gz
    push-docker:
        name: Push to Docker-Hub
        needs: build
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'

        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Login to Docker Hub
              uses: docker/login-action@v2
              with:
                  username: ${{ secrets.DOCKER_USERNAME }}
                  password: ${{ secrets.DOCKER_PASSWORD }}
              continue-on-error: true
            - name: Build and Push
              run: |
                  docker build -t ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.sha }} .
                  docker tag ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.sha }} ${{ secrets.DOCKER_USERNAME }}/task-manager:latest
                  docker push ${{ secrets.DOCKER_USERNAME }}/task-manager:${{ github.sha }}
                  docker push ${{ secrets.DOCKER_USERNAME }}/task-manager:latest
              continue-on-error: true
    deploy:
        name: Deploy to production
        needs: [test, build]
        runs-on: ubuntu-latest
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4

            - name: Deploy Notification
              run: |
                  echo "ðŸš€ Deploying to production..."
                  echo "Commit: ${{ github.sha }}"
                  echo "Author: ${{ github.actor }}"
                  echo "Message: ${{ github.event.head_commit.message }}"

            - name: Deployment Complete
              run: echo "âœ… Deployment completed successfully!"
